# {{ ansible_managed }}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    listen [::]:80;

    server_name {{ domain }} www.{{ domain }};

    root /var/www/{{ domain }};
    index index.html;


    location / {
{% if ssl %}
        return 301 https://$host$request_uri;
{% else %}
        proxy_pass http://localhost:{{ site_port }};

        # Enable websocket support with connection upgrades
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Forward headers of the original request
        proxy_pass_request_headers on;

        # And include some standard reverse proxy headers...
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
{% endif %}
    }

{% if static_dir %}
    location /static {
        alias {{ static_dir }};
    }
{% endif %}
}

{% if ssl %}
server {
    access_log /var/log/nginx/{{domain}}_access.log;
    error_log /var/log/nginx/{{domain}}_error.log;
    charset utf-8;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ domain }} www.{{ domain }};

    # ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    location / {
        proxy_pass http://localhost:{{ site_port }};

        # Enable websocket support with connection upgrades
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Forward headers of the original request
        proxy_pass_request_headers on;

        # And include some standard reverse proxy headers...
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
{% if static_dir %}
    location /static {
        alias {{ static_dir }};
    }
{% endif %}
}
{% endif %}